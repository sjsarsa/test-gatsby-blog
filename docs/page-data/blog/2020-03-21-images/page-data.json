{"componentChunkName":"component---src-components-blogpost-blogpost-jsx","path":"/blog/2020-03-21-images/","result":{"data":{"site":{"siteMetadata":{"title":"M@th B|og"}},"mdx":{"id":"7121f8c5-a322-5462-b0a4-890f097a9140","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Information About Gatsby-Images\",\n  \"date\": \"2020-03-21\",\n  \"description\": \"Explaining how to utilize gatsby's \\\"fluid\\\" images.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Regular markdown images work as intended.\\nFor example:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://images.unsplash.com/photo-1519052537078-e6302a4968d4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n    \"alt\": \"Cat\"\n  }))), mdx(\"p\", null, \"Further regular html images also work as intended.\\nFor example:\"), mdx(\"img\", {\n    src: \"https://images.unsplash.com/photo-1519052537078-e6302a4968d4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n    alt: \"Cat\"\n  }), mdx(\"div\", {\n    className: \"mt5\"\n  }), mdx(\"p\", null, \"In order to utilize Gatsby Image however, there is a bit of set up necessary for each image you include.\"), mdx(\"p\", null, \"For example, consider the image \\\"myface.jpg\\\"\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Put the image into src/images\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Edit the file src/components/image.jsx in the folowing way:\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Add a graphql query for the image with whatever name you want. In this case I used the name \\\"aboutHeadshot\\\".\"), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//src/components/image.jsx\\n//...\\nconst useFluidImage = () => {\\n  const images = useStaticQuery(graphql`\\n    fragment FluidImage on File {\\n      childImageSharp {\\n        fluid(quality: 70, maxWidth: 800) {\\n          ...GatsbyImageSharpFluid\\n        }\\n      }\\n    }\\n    query {\\n      favicon: file(relativePath: { eq: \\\"icon.png\\\" }) {\\n        ...FluidImage\\n      }\\n+     aboutHeadshot: file(relativePath: {eq: \\\"myface.jpg\\\" }) {\\n+       ...FluidImage\\n+     }\\n    }\\n  return images;\\n}\\n\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Then add a case statement to the Image component to grab that particular image.\"), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//src/components/image.js\\n//...\\nconst Image = ({ particularImage, className, alt }) => {\\n  const images = useFluidImage()\\n  let fluid\\n  switch (particularImage) {\\n    case \\\"favicon\\\":\\n      fluid = images.favicon.childImageSharp.fluid\\n      break\\n+   case \\\"aboutHeadshot\\\":\\n+     fluid = images.aboutHeadshot.childImageSharp.fluid\\n+     break\\n    default:\\n      return null\\n  }\\n  return <Img className={className} fluid={fluid} alt={alt} />\\n}\\n\"))), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Begin using the image in your Blog\")), mdx(\"blockquote\", null, mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//src/blog/anyfile.mdx\\n//...\\nimport Image from \\\"../components/image\\\"\\n<Image particularImage=\\\"aboutHeadshot\\\" className=\\\"mw5\\\" alt=\\\"My headshot\\\"/>\\n\"))), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Profit??\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This procedure will result in the following image:\"), mdx(Image, {\n    particularImage: \"aboutHeadshot\",\n    className: \"mw5\",\n    alt: \"My headshot\",\n    mdxType: \"Image\"\n  })), mdx(\"div\", {\n    className: \"mt5\"\n  }), mdx(\"h2\", null, \"More Information\"), mdx(\"p\", null, \"To learn more about Gatsby-Image check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/using-gatsby-image/\"\n  }), \"https://www.gatsbyjs.org/docs/using-gatsby-image/\")), mdx(\"p\", null, \"Further, if you know of a better way to go about implemnting this feature in this blog, let me know at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.github.com/kunalja/gatsby-starter-math-blog/issues\"\n  }), \"https://www.github.com/kunalja/gatsby-starter-math-blog/issues\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Information About Gatsby-Images","date":"2020-03-21","description":"Explaining how to utilize gatsby's \"fluid\" images."}},"allMdx":{"edges":[{"node":{"frontmatter":{"title":"Site Information and Guide","date":"2020-03-24","description":"A comprehensive guide that displays the starter's features and explains how to extend and modify them."},"fields":{"slug":"/blog/2020-03-24-guide/"}}},{"node":{"frontmatter":{"title":"Latex and Code Examples","date":"2020-03-23","description":"How to use latex and code in your blog posts."},"fields":{"slug":"/blog/2020-03-23-latex/"}}},{"node":{"frontmatter":{"title":"Information About Gatsby-Images","date":"2020-03-21","description":"Explaining how to utilize gatsby's \"fluid\" images."},"fields":{"slug":"/blog/2020-03-21-images/"}}},{"node":{"frontmatter":{"title":"Latin Placeholder Text","date":"2020-02-14","description":"Lorem Ipsum comes from the 45 BC text \"de Finibus Bonorum et Malorum\" by Cicero."},"fields":{"slug":"/blog/2020-02-14-latin/"}}},{"node":{"frontmatter":{"title":"Russian Placeholder Text","date":"2020-01-30","description":"This is a joke where I use the description of placeholder text as placeholder text."},"fields":{"slug":"/blog/2020-01-30-russian/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2020-03-21-images/","id":"7121f8c5-a322-5462-b0a4-890f097a9140"}}}